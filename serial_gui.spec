# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['serial_gui.py'],
    pathex=['C:\\SerialCOM_Tool'],
    binaries=[],
    datas=[
        ('image\\*.png', 'image'),
        ('protocol.py', '.'),
        ('host_tab.py', '.'),
        ('device_tab.py', '.'),
        ('modbus_tcp_protocol.py', '.'),
        ('modbus_tcp_master_tab.py', '.'),
        ('modbus_tcp_slave_tab.py', '.'),
    ],
    hiddenimports=[
        'tkinter',
        'tkinter.ttk',
        'tkinter.messagebox',
        'tkinter.filedialog',
        'tkinter.scrolledtext',
        'serial',
        'serial.tools',
        'serial.tools.list_ports',
        'threading',
        'queue',
        'socket',
        'struct',
        'dataclasses',
        'enum',
        'typing',
        'datetime',
        'platform',
        'glob',
        'json',
        'csv',
        'time',
        'os',
        'sys',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='SerialCOM_Tool',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    version='version_info.txt',
    icon='image\\app.ico' if os.path.exists('image\\app.ico') else None
)